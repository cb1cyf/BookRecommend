#!/bin/bash
set -e

# root is required for docker-compose
if [ $UID -ne 0 ];then
    echo '[ERROR] Please Run as Root'
    exit 1
fi

# Path variables
ROOT_PATH="../"
MYSQL_INIT_PATH="./mysql/init"
# check folders
if [ ! -d "./mysql" ]; then
    mkdir "./mysql"
    if [ ! -d $MYSQL_INIT_PATH ]; then
        mkdir $MYSQL_INIT_PATH
    fi
fi

echo '[INFO] Copy initial sql'
cp $ROOT_PATH/SQL/*.sql $MYSQL_INIT_PATH/

echo '[INFO] Starting Containers...'
docker-compose up -d
echo '[INFO] Containers Started'

# NumPy is required for PySpark ML; PyMySQL is used to execute delete clause
echo '[INFO] Installing NumPy & PyMySQL on Spark Master...'
docker exec master apt-get update
# Optional:
# docker exec master apt-get upgrade -y
docker exec master apt-get install gcc -y
docker exec master apt-get install python3-dev -y
docker exec master pip install numpy
docker exec master pip install PyMySQL==0.9.3
echo '[INFO] NumPy & PyMySQL Installed'

echo '[INFO] Install tomcat@8 on Spark Master...'
docker exec master curl -k https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.78/bin/apache-tomcat-8.5.78.tar.gz > /usr/tomcat.tar.gz
docker exec master chmod a+x /usr/tomcat.tar.gz
docker exec master tar -xvf /usr/tomcat.tar.gz
docker exec master rm -f /usr/tomcat.tar.gz
docker exec master mv /usr/apache-tomcat-8.5.78/ /usr/tomcat
docker exec master sed -i 's/Connector port="8080"/Connector port="8888"/' /usr/apache-tomcat-8.5.78/conf/server.xml
docker exec master rm -rf /usr/tomcat/webapps/
docker exec master mv /usr/webapps /usr/tomcat/webapps
echo '[INFO] Start-up Tomcat'
docker exec master /usr/bin/tomcat/bin/startup.sh

echo '[INFO] Loading SQL Data into MySQL...'
if [ ! -f ./bookData.sql ]; then
    echo '[INFO] Start download the full "book.sql" through Curl...'
    curl http://www2.informatik.uni-freiburg.de/~cziegler/BX/BX-SQL-Dump.zip > sql.zip
    unzip -x sql.zip -d tmp
    echo '[INFO] preSQL...'
    python $ROOT_PATH/scripts/preSQL.py
    # cp ./tmp/book.sql $MYSQL_INIT_PATH/book.sql
    rm -rf ./tmp
    rm -f ./sql.zip
fi
docker exec -i mysql sh -c 'exec mysql -uroot -p12345678 recommend' < ./bookData.sql
echo '[INFO] SQL Data Loaded'
rm -f ./bookData.sql

echo '[INFO] Submitting Rating CSV File to HDFS...'
tar -xvf $ROOT_PATH/CSV/Ratings.tar.gz -C $ROOT_PATH/CSV/
rm -f $ROOT_PATH/CSV/Ratings.tar.gz
cp $ROOT_PATH/CSV/Ratings.csv ./input_files/
docker exec namenode hdfs dfs -mkdir /input
docker exec namenode hdfs dfs -put /input_files/Ratings.csv /input
echo '[INFO] File Submitted'

echo '[INFO] Copying Code & Driver to Spark Master...'
cp $ROOT_PATH/code/main.py ./submit/
cp $ROOT_PATH/resources/mysql-connector-java-5.1.40.tar.gz ./submit/
docker exec master tar -zxf /usr/submit/mysql-connector-java-5.1.40.tar.gz -C /usr/spark-2.3.0/jars/

echo '[INFO] Done'
